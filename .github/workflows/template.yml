name: "container-image"

on:
  push:
  workflow_dispatch:
jobs:
  test:
    name: "test"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Unit test
        run: echo "Implement the unit tests here"

  lint:
    name: "lint"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Lint
        run: echo "Implement the lint here"

  codeql:
    name: "codeql"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v1
        with:
          languages: "javascript"
      
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v1
  
  e2e:
    name: "e2e"
    runs-on: ubuntu-latest
    needs: ["test", "lint","codeql"]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: E2E tests
        run: echo "Implement the running e2e here"
  
  build-docker-image:
    name: "build-docker-image"
    runs-on: ubuntu-latest
    needs: "e2e"
    if: ${{ github.ref == 'refs/heads/main' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Caching Dockerfile  
        id: cache-docker
        uses: actions/cache@v2
        with:
          path: ./test-docker-image.tar.gz
          key: ${{ runner.os }}-docker-${{ hashFiles('**/Dockerfile') }}
          restore-keys: ${{ runner.os }}-docker-  
      - name: Build an image from Dockerfile
        if: steps.cache-docker.outputs.cache-hit != 'true'
        uses: docker/build-push-action@v2
        with:
          tags: test-docker-image
          push: false
          load: true 
      - name: Zip docker image
        if: steps.cache-docker.outputs.cache-hit != 'true'    
        run: |
          docker save -o test-docker-image.tar.gz test-docker-image
          ls -l
  scan-docker-image-with-trivy:
    name: Scan docker image with trivy
    needs: build-docker-image
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Caching Dockerfile  
        id: cache-docker
        uses: actions/cache@v2
        with:
          path: ./test-docker-image.tar.gz
          key: ${{ runner.os }}-docker-${{ hashFiles('**/Dockerfile') }}
          restore-keys: ${{ runner.os }}-docker-
      - name: Load Dockerfile
        run: |
          ls -l
          docker load -i ./test-docker-image.tar.gz
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'test-docker-image'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: 'trivy-results.sarif'   

  scan-docker-image-with-anchore:
    name: Scan docker image with anchore
    needs: build-docker-image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Caching Dockerfile  
        id: cache-docker
        uses: actions/cache@v2
        with:
          path: ./test-docker-image.tar.gz
          key: ${{ runner.os }}-docker-${{ hashFiles('**/Dockerfile') }}
          restore-keys: ${{ runner.os }}-docker-
      - name: Load Dockerfile
        run: |
          ls -l
          docker load -i ./test-docker-image.tar.gz
      - name: Run Anchore vulnerability scanner
        uses: anchore/scan-action@v3
        with:
          image: "test-docker-image"
          fail-build: true

